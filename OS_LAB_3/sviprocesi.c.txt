#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/module.h>
#include <linux/sched.h>
#include <linux/proc_fs.h>
#include <linux/ktime.h>

MODULE_DESCRIPTION("mojmodul");
MODULE_AUTHOR("Filip");
MODULE_LICENSE("GPL");

void ispis(void) {
       printk(KERN_INFO "-----------------\n");

        //s64 boottime_s = ktime_divns(ktime_get_boottime(), NSEC_PER_SEC);

        struct task_struct *process;

        for_each_process(process) {
                // executable name | PID | process runtime
                //printk(KERN_INFO "%s\t%d\t%llus\n", process->comm, process->pid, boottime_s - (process->start_boottime)$
                printk(KERN_INFO "Executable Name: %s\t tPID: %d\t Process State: %d\n", process->comm, process->pid, pro$
        }

        //printk(KERN_INFO "boottime: %lld", boottime_s);
}

static int mojmodul_init(void) {
        ispis();
        return 0;
}

static void mojmodul_exit(void) {
}

module_init(mojmodul_init);
module_exit(mojmodul_exit);


/*
make
insmod sviprocesi.ko
rmmod sviprocesi
dmesg
*/

